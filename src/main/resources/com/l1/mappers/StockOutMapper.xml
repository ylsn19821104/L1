<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.l1.dao.StockOutDao">

    <resultMap type="com.l1.entity.StockOut" id="StockOutResult">
        <result property="id" column="id"/>
        <result property="billNo" column="billNo"/>
        <result property="billStat" column="billStat"/>
        <result property="billStatName" column="billStatName"/>
        <result property="StockOutWarehouseId" column="StockOutWarehouseId"/>
        <result property="StockOutWarehouseName" column="StockOutWarehouseName"/>
        <result property="StockInWarehouseId" column="StockInWarehouseId"/>
        <result property="StockInWarehouseName" column="StockInWarehouseName"/>
        <result property="billDate" column="billDate"/>
        <result property="totalStockOut" column="totalStockOut"/>

        <result property="create_by" column="create_by"/>
        <result property="create_time" column="create_time"/>
        <result property="update_by" column="update_by"/>
        <result property="update_time" column="update_time"/>
    </resultMap>

    <insert id="save" parameterType="com.l1.entity.StockOut" useGeneratedKeys="true" keyProperty="id">
		insert into tb_stockOut (billNo,billStat,StockOutWarehouseId,StockInWarehouseId,billDate,totalStockOut)
		values(#{billNo},#{billStat},#{StockOutWarehouseId},#{StockInWarehouseId},#{billDate},#{totalStockOut})
	</insert>

    <update id="update" parameterType="com.l1.entity.StockOut">
        update tb_stockOut
        <set>
            StockOutWarehouseId=#{StockOutWarehouseId},
            StockInWarehouseId=#{StockInWarehouseId},
            billDate=#{billDate},
            totalStockOut=#{totalStockOut}
        </set>
        where id=#{id}
    </update>
    <update id="finish">
        UPDATE tb_stockOut set billStat = 1 WHERE id IN
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="unfinish">
        UPDATE tb_stockOut set billStat = 0 WHERE id IN
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <sql id="v_stockOut">
        SELECT stock.*,w_o.name stockOutWarehouseName,w_i.name StockInWarehouseName,d.textField billStatName
        FROM tb_stockout stock
        LEFT JOIN tb_warehouse w_o ON stock.StockOutWarehouseId = w_o.id
        LEFT JOIN tb_warehouse w_i ON stock.StockInWarehouseId = w_i.id
        LEFT JOIN (SELECT valueField, textField FROM tb_dic WHERE keyWord = 'stockOutStatus') d ON stock.billStat = d.valueField

    </sql>
    <select id="find" resultMap="StockOutResult">
        <include refid="v_stockOut"></include>
        <where>
            <if test="billStat!=null and billStat!='' ">
                and billStat=#{billStat}
            </if>
        </where>
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="findByIds" parameterType="string" resultMap="StockOutResult">
		select r.*,w.name warehouseName,s.supplierName supplierId from tb_stockOut r,tb_warehouse w,tb_supplier s,tb_dic d
		where id in (#{ids}) and r.warehouseId = w.id
	</select>

    <select id="findById" parameterType="int" resultMap="StockOutResult">
        <include refid="v_stockOut"></include>
        WHERE stock.id = #{id}
    </select>
    <select id="findListFinishedForCombo" resultType="map">
        SELECT id,billNo FROM tb_stockOut WHERE billStat=2
    </select>

    <select id="getTotal" parameterType="map" resultType="Long">
        select count(*) from tb_stockOut
        <where>
            <if test="name!=null and name!='' ">
                and name like #{name}
            </if>
            <if test="code!=null and code!='' ">
                and code like #{code}
            </if>
        </where>
    </select>

    <delete id="delete">
        DELETE FROM tb_stockout where id IN
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteById" parameterType="int">
		DELETE FROM tb_stockOut where id=#{id}
	</delete>

</mapper> 